name: Build and Publish Multi-Arch Docker Images

on:
  push:
    branches:
      - main

env:
  # Configure these variables as needed
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ["builder", "viewer"]
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: buildjet-8vcpu-ubuntu-2204-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ahmedkhaled4d/zazubot-${{ matrix.app }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SCOPE=${{ matrix.app }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Create and push multi-arch manifest
        run: |
          # Create multi-arch manifest
          docker manifest create ahmedkhaled4d/zazubot-${{ matrix.app }}:${{ github.ref_name }} \
            ahmedkhaled4d/zazubot-${{ matrix.app }}:${{ github.ref_name }}-amd64 \
            ahmedkhaled4d/zazubot-${{ matrix.app }}:${{ github.ref_name }}-arm64

          # Push the manifest
          docker manifest push ahmedkhaled4d/zazubot-${{ matrix.app }}:${{ github.ref_name }}

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: create-manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
